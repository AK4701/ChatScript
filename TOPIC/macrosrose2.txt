^owner P 0 1 B[ ( my *~2 ^0 ) ( I * ~own * ^0 ) ] 
^randomchoice O 0 1 B^pick ( ^0 ) 
^findrejoinder O 0 1 B$$result = null $$rule = ^getrule ( tag ^0 ) $$type = ^getrule ( type ^0 ) _0 = ^burst ( $$rule . ) $$topic = _0 $$toprule = _1 $$newrejoin = _2 ^^loop ( -1 ) 04l { $$newtag = ^join ( $$topic . $$toprule . $$newrejoin ) $$newrule = ^getrule ( pattern $$newtag ) $$newtype = ^getrule ( type $$newtag ) ^^if 00Q( $$newtype == $$type and ^match ( $$newrule ) ) 00K{ $$result = $$newtag ^fail ( RULE ) } 00Z else 00q( $$newtype < $$type ) 00q{ ^fail ( RULE ) } 004 $$newrejoin += 1 } 
^donextgambit O 0 0 A( ) $$xrep = %response ^^if 00r( $$xrep == %response ) 00C{ ^gambit ( $$currenttopic ) } 004 
^callback O 0 0 A^^if 00v( %topic != ~hear_a_story ) 00J{ ^preprint ( \[ callback=3000 \] ) } 004 
^fastcallback O 0 0 A^preprint ( \[ callback=1500 \] ) 
^internalfact O 0 1 B^^if 00L( ^0 == member or ^0 == equal or ^0 == is ) 00q{ ^fail ( RULE ) } 004 
^okgambittopic O 0 1 B$$tx = ^substitute ( character ^0 ~ "" ) $$tmpclosed = ^join ( $ no $$tx ) $$tmpclosed = ^eval ( $$tmpclosed ) ^^if 00s( $$tmpclosed > %input ) 00q{ ^fail ( RULE ) } 04p else 00I( ^substitute ( character ^0 story x ) ) 00q{ ^fail ( RULE ) } 03p else 00G( ^substitute ( character ^0 job x ) ) 01N{ $$xt = ^substitute ( character ^0 ~ "" ) $$xt = ^join ( $ $$xt ) ^^if 00h( $$xt != 1 ) 00q{ ^fail ( RULE ) } 004 } 014 else 00I( ^substitute ( character ^0 hobby x ) ) 00q{ ^fail ( RULE ) } 004 
^cleantopic O 0 1 B^^if 00A( ^lastused ( $$topic GAMBIT ) ) 00q{ ^fail ( RULE ) } 004 ^okgambittopic ( $$topic ) 
^findclasses O 0 1 B@19 = null $$tmp = ^substitute ( character ^0 " " _ ) $$x = ^join ( ~ $$tmp ) $$x1 = ^join ( ~ $$tmp s ) $$x2 = ^join ( ~ $$tmp list ) $$x3 = ^join ( ~ $$tmp _ words ) @19 = ^query ( direct_sv ^0 correspond ? ) ^^if 00s( ^length ( @19 ) >= 1 ) 00b{ } 06! else 00^( ^properties ( $$x ) >= 0 and ^hasanyproperty ( $$x CONCEPT ) ) 00Q{ @19 += ^createfact ( ^0 correspond $$x ) } 05d else 00*( ^properties ( $$x1 ) >= 0 and ^hasanyproperty ( $$x1 CONCEPT ) ) 00R{ @19 += ^createfact ( ^0 correspond $$x1 ) } 03z else 00*( ^properties ( $$x2 ) >= 0 and ^hasanyproperty ( $$x2 CONCEPT ) ) 00R{ @19 += ^createfact ( ^0 correspond $$x2 ) } 01V else 00*( ^properties ( $$x3 ) >= 0 and ^hasanyproperty ( $$x3 CONCEPT ) ) 00R{ @19 += ^createfact ( ^0 correspond $$x3 ) } 004 
^url_for P 0 1 B<< [ where what give show provide tell have ] [ website URL site page webpage link weblink homepage ] ^0 >> 
^makefact O 0 4 E^createfact ( ^1 ^2 ^3 FACTDUPLICATE ) ^^if 00m( $showfact == 1 ) 00={ ^log ( FILE "tmp/facts.txt" "^   FACT:^0 \[ ^1  ^2 ^3 \] \n" ) } 004 ^^if 00m( $showfact == 2 ) 00${ ^log ( OUTPUT_ECHO "^   FACT:^0  \[ ^1  ^2 ^3 \] \n" ) } 004 
^makefactf O 0 5 F^createfact ( ^1 ^2 ^3 FACTDUPLICATE ^4 ) ^^if 00m( $showfact == 1 ) 013{ ^log ( FILE "tmp/facts.txt" "^   FACT:^0  \[ ^1  ^2 ^3 ^4 \] \n" ) } 004 ^^if 00m( $showfact == 2 ) 00&{ ^log ( OUTPUT_ECHO "^   FACT:^0  \[ ^1  ^2 ^3 ^4 \] \n" ) } 004 
^use P 0 2 C_~mainsubject * ^1 * _^0 
^usename O 0 1 B^^if 00K( ^query ( direct_vo ? equal ^0 ? user ) ) 01b{ ^^if 00m( @0subject == I ) 00f{ you } 00B else ( 1 ) 00l { @0subject } 004 } 01d else ( 1 ) 00/ { ^^if 00f( ^0 == I ) 00f{ you } 00u else ( 1 ) 00e { ^0 } 004 } 004 
^equalvoquery O 0 2 C^^if 00H( ^query ( direct_vo ? ^0 ^1 1 user ) ) 00w{ $$answer = @0subject } 03Z else 00D( ^query ( direct_sv ^1 equal ? ) ) 00={ ^query ( direct_vo ? ^0 @0object 1 user ) $$answer = @0subject } 02i else 00K( ^query ( direct_vo ? equal ^1 1 user ) ) 010{ ^query ( direct_vo ? ^0 @0subject 1 user ) $$answer = @0subject } 00G else ( 1 ) 00q { ^fail ( rule ) } 004 
^equalsvquery O 0 2 C^^if 00H( ^query ( direct_sv ^0 ^1 ? 1 user ) ) 00v{ $$answer = @0object } 03$ else 00K( ^query ( direct_sv ^0 equal ? 1 user ) ) 00+{ ^query ( direct_sv @0object ^1 ? 1 user ) $$answer = @0object } 02h else 00K( ^query ( direct_vo ? equal ^0 ? user ) ) 00={ ^query ( direct_sv @0subject ^1 ? 1 user ) $$answer = @0object } 00G else ( 1 ) 00q { ^fail ( rule ) } 004 
^equalsoquery O 0 2 C^^if 00H( ^query ( direct_so ^0 ? ^1 1 user ) ) 00t{ $$answer = @0verb } 077 else 00K( ^query ( direct_sv ^0 equal ? 1 user ) ) 00?{ ^query ( direct_so @0object ? ^1 1 user ) $$answer = @0verb } 05z else 00K( ^query ( direct_vo ? equal ^0 1 user ) ) 00/{ ^query ( direct_so @0subject ? ^1 1 user ) $$answer = @0verb } 03~ else 00K( ^query ( direct_sv ^1 equal ? 1 user ) ) 00?{ ^query ( direct_so ^0 ? @0object 1 user ) $$answer = @0verb } 02f else 00K( ^query ( direct_vo ? equal ^0 1 user ) ) 00/{ ^query ( direct_so ^0 ? @0subject 1 user ) $$answer = @0verb } 00G else ( 1 ) 00q { ^fail ( rule ) } 004 
^referto P 0 1 B[ ( [ name what which who ] *~4 ^0 ) ] 
^youdothis P 0 1 B!~qwords ( ~aux_verb { ~adverb } you !~preposition * ^0 > ) 
^whereborn P 0 1 B[ ( << what [ nation country nationality citizen ] ^0 >> ) ( << where ^0 [ from born hometown home_town birthplace ] >> ) ( << ^0 [ birthplace hometown home_town ] >> ) ( << ^0 native [ city town village nation country ] >> ) ] 
^queryforsubject P 0 3 D^query ( direct_vo ? ^1 ^0 -1 ? ^2 ) 
^queryforobject P 0 3 D^query ( direct_sv ^0 ^1 ? -1 ? ^2 ) 
^favetable T 8 4 E$$x = ^join ( ^1 _ ^2 ) ^^if 00w( ^properties ( $$x ) != 0 ) 00t{ ^^2 = $$x ^^1 = _ } 004 $$lastfact = ^createfact ( ( ^1 ^0 ^3 ) favorite ^2 ) ^addproperty ( ^1 PATTERN_WORD ) ^addproperty ( ^2 PATTERN_WORD ) 
^favoritetable O 8 4 E$$x = ^join ( ^1 _ ^2 ) ^^if 00w( ^properties ( $$x ) != 0 ) 00t{ ^^2 = $$x ^^1 = _ } 004 $$lastfact = ^createfact ( ( ^1 ^0 ^3 ) favorite ^2 ) ^addproperty ( ^1 PATTERN_WORD ) ^addproperty ( ^2 PATTERN_WORD ) 
^hatetable O 8 4 E$$x = ^join ( ^1 _ ^2 ) ^^if 00w( ^properties ( $$x ) != 0 ) 00t{ ^^2 = $$x ^^1 = _ } 004 $$lastfact = ^createfact ( ( ^1 ^0 ^3 ) hate ^2 ) ^addproperty ( ^1 PATTERN_WORD ) ^addproperty ( ^2 PATTERN_WORD ) 
^where_be P 0 1 B[ ( < * where * be * ^0 < ![ not never ] ) ( < * where * ^0 *~2 be < ![ not never ] ) ( < * what * [ place location state country city planet ] * be < ![ not never ] ) ] 
^want_you_go_xxx P 0 1 B( [ ( you be go * ^0 ) ( let_us_go * ^0 ) ( < want to go * ^0 ) ( you * want * go * ^0 ) ] ) 
^do_you_like P 0 1 B![ or ~qwords ] do * you * ~like * ^0 
^list_limit P 0 0 A<< [ ( _~place_number ^eval ( $place = _0 $count = _0 ) ) ( _~number ^eval ( $place = null $count = _0 ) ) ( ~noun ^eval ( $place = null $count = 1 ) ) ] >> 
^generate_first_instance O 0 2 C^query ( direct_vo ? ^0 ~country -1 ? @1 ) ^sort ( @1 ) ^^loop ( $count ) 00/ { _7 = ^first ( @1- ) ^^if 00m( $place == null ) 00h{ ^1 \n } 004 } ^^if 00e( $place ) 00e{ _8 } 004 $currentcountry = _7 $area = _9 
^compute_letter O 0 3 D^query ( direct_vo ? lettervalue ^0 1 ) _8 = ^compute ( @0subject ^1 ^2 ) ^query ( direct_sv _8 lettervalue ? 1 ) @0object . 
^generate_last_instance O 0 2 C^query ( direct_vo ? ^0 ~country -1 ? @1 ) ^sort ( @1 ) ^^loop ( $count ) 00? { _7 = ^last ( @1- ) ^^if 00m( $place == null ) 00h{ ^1 \n } 004 } ^^if 00e( $place ) 00e{ _8 } 004 $currentcountry = _7 $area = _9 
^know_about P 0 0 A=8%tense=present ![ who where why ] [ ( < *~2 [ do_you_know what_do_you_know what_is_there_to_know what_you_know what_do_you_make be_you_take ] { of about on the } { a } ) ( you * ~opinionset { about on of } { a } ) ( like > < * what be ) ( your take on ) ( ~tell me about ) ] 
^whatwork P 0 1 B![ ideal perfect dream sport ] [ ( << ^0 [ work study job career interest profession for_a_living earn_money ] >> ) ( what * ^0 * do > ) ( what be * ^0 ) ( do ^0 work ) ( what * do * ^0 * do * ~job ) ( what * be * ^0 ~job ) ( what * ^0 work as > ) ( what * do * ^0 * do * earn * ~salary ) ( how * do * ^0 * ~job ) ( how * do * ^0 * earn * ~salary ) ( where * do * ^0 * earn * ~salary ) ( what * do * ^0 * do *~2 > ) ( ^0 < * have < * ~job ) ( << are ^0 working >> ) ] 
^ishaircolor P 0 1 B[ ( ^0 * have * [ fur hair ] < ![ not never ] ) ( be < * ^0 < * [ blonde brunette redhead blond silver ] < ![ not never ] ) ( ![ not never ] << what ^0 hair color >> ) ( ^0 [ fur hair ] < ![ not never ] ) ( ^0 [ fur hair ] *~2 color < ![ not never ] ) ] 
^isweight P 0 1 B[ ( ^0 < * [ weigh weight ] < ![ not never ] ) ( how *~2 [ fat big skinny heavy chubby thin massive ] * ^0 !~noun < ![ not never ] ) ] 
^isheight P 0 1 B[ ( ^0 < * [ tall height short ] < ![ not never ] ) ] 
^iseyecolor P 0 1 B[ ( what be < * ^0 < * eye < * color < ![ not never ] ) ( be < * ^0 eye < ![ not never ] ) ] 
^phonenumber P 0 1 B[ ( ^0 [ phone_number cell_number telephone_number ] < ![ not never ] ) ( ^0 [ phone_number cell_number telephone_number ] *~2 be < ![ not never ] ) ( phone_number < * ^0 < ![ not never ] ) ] 
^haspet P 0 1 B![ not never ] << ^0 ~own _pet >> 
^showfact O 0 0 A^repeat ( ) _1 = ^first ( @1+ ) _7 = ^burst ( _1 _|_ ) ^print ( "^    _7 _4 _8 _2 _3  . " ) 
^showfacts O 0 0 A^^loop ( 10 ) 00p { ^showfact ( ) \n } 
^what_is_name P 0 1 B[ ( have ^0 !\'s *~2 name ) ( !~verb ^0 !\'s *~2 name > ) ( what < * ^0 < * [ handle name call given_name ] < !middle < ![ them they ] ) ( who * be * ^0 > ) ( [ what how ] * [ name call refer address ] { to } ^0 ) ( !~family_members ^0 *~2 [ name given_name forename personal_name christian_name ] ) ( tell you * ^0 !\'s *~2 name ) ( < ^0 name > ) ( identify ^0 ) ] 
^what_is_job P 0 1 B[ ( ^0 < * have < * ~job ) ( what * ^0 work as > ) ( what * do * ^0 * do * earn * ~salary ) ( !much how * do * ^0 * ~job ) ( !much how * do * ^0 * earn * ~salary ) ( where * do * ^0 * earn * ~salary ) ( !~like what * do * ^0 * do > ) ( where * do * ^0 * ~job ) ( !earn ^0 *~1 ~job ) ( do ^0 work ) ( [ kind line ] of ~job * ^0 ) ( !earn what * be * ^0 ~job ) ( !earn what * do * ^0 * do * ~job ) ] 
^have_a_job_xxx P 0 0 A[ ( I be ) ( I have a job ) ( I be employed ) ( I job be ) ( I work be ) $$word ] 
^compute_day O 0 2 C$$amount = ^1 ^query ( direct_vo ? dayvalue ^0 1 ) _8 = ^compute ( @0subject add ^1 ) ^^loop ( -1 ) 029 { ^^if 00e( _8 > 7 ) 00C{ _8 = ^compute ( _8 sub 7 ) } 01n else 00e( _8 > 0 ) 00p{ ^end ( RULE ) } 00S else ( 1 ) 00C { _8 = ^compute ( _8 add 7 ) } 004 } ^query ( direct_sv _8 dayvalue ? 1 ) $$day = @0object 
^compute_month O 0 2 C$$amount = ^1 ^query ( direct_vo ? value ^0 1 ) _8 = ^compute ( @0subject add ^1 ) ^^loop ( -1 ) 02c { ^^if 00f( _8 > 12 ) 00D{ _8 = ^compute ( _8 sub 12 ) } 01o else 00e( _8 > 0 ) 00p{ ^end ( RULE ) } 00T else ( 1 ) 00D { _8 = ^compute ( _8 add 12 ) } 004 } ^query ( direct_sv _8 value ? 1 ) $$month = @0object 
^howoftentable O 0 4 E$$lastfact = ^createfact ( ( ^2 ^0 ^3 ) howoften ^1 ) ^addproperty ( ^1 PATTERN_WORD ) ^addproperty ( ^2 PATTERN_WORD ) 
^doyoutable O 0 4 E$$lastfact = ^createfact ( ( ^1 doyou ^2 ) ^0 ^3 ) ^addproperty ( ^1 PATTERN_WORD ) ^addproperty ( ^2 PATTERN_WORD ) 
^what_is_your_favorite P 0 1 B[ ( [ which who what ] * ^0 do you [ think ~like ] *~2 best ) ( ~favorite { ~category } { of } ^0 ) ( [ which who what ] be my ~favorite > ) ( [ which what who ] * you < * [ ~like ~favorite ] < * ^0 ) ( [ who what which ] * be * ~favorite * ^0 ) ( < ~favorite * ^0 ) ( < you ~favorite * ^0 ) ( you have * ~favorite * ^0 ) ( ^0 you ~favorite ) ( name *~2 you *~2 ~favorite * ^0 ) ( particular *~2 ^0 *~2 you enjoy ) ( [ which what who ] * [ you you ] < * [ ~like ~favorite ] < * ^0 ) ( [ who what which ] * be * ~favorite * ^0 ) ( ^0 * be * ~favorite ) ( any *~2 ^0 you * [ ~like ~favorite ] ) ( what ~category { of } * ^0 do you ~like ) ( ~favorite *~2 ~category { of } ^0 ) ( what *~2 ^0 *~2 do you follow ) ] 
^holiday T 0 5 F^createfact ( ^0 member ~holiday ) ^addproperty ( ^0 NOUN NOUN_PROPER_SINGULAR ) ^createfact ( ^1 month ^0 ) ^createfact ( ^2 date ^0 ) ^^if 00f( ^3 != * ) 00B{ ^createfact ( ^3 day ^0 ) } 004 ^createfact ( ^4 why ^0 ) 
^howmuch P 0 3 D[ ( what [ do be ] ~number ^1 ^eval ( $tmp = ^2 ) ) ( what be [ 'a an ] ^2 ^eval ( $tmp = ^join ( ^0 _ ^1 s ) ) ) ( [ how_much what ] be _{ a ~number } ^2 * ^1 ) ( how [ much many ] *~2 ^1 * _{ a ~number } ^2 ) ] 
^stdconvert O 0 2 C^^if 00c( $tmp ) 00G{ $tmp $tmp = null ^end ( RULE ) } 004 ^^if 00t( _0 == null or _0 == a ) 00i{ _0 = 1 } 004 There are ^compute ( _0 * ^1 ) ^0 . 
^timecheck P 0 0 A[ ( =9%length<8 [ ( << what be 'time >> ) be_the_time ( [ tell know aware ] * 'time ) ] ) ( !~qwords you < * [ know have aware ] !good * { what the } [ time hour ] !to { be } > ) ( !~qwords 'you *~2 the time ) ( !~qwords the time to I ) ] 
^ordering T 0 3 D^createfact ( ^2 ^0 ^1 ) 
^winoanswer O 0 1 B$$winoanswer = ^0 ^^if 00d( %more ) 00t{ ^end ( SENTENCE ) } 004 
^findreference O 0 1 B^^loop ( -1 ) 05f { _15 = ^last ( @0all ) $$volley = _15 >> 16 _15 &= 0x0000ffff $$sentence = _15 >> 8 _15 &= 0x000000ff $$offset = _15 $$after = null $$earlier = null $$before = null ^^if 00Q( $$sentence == $$sentenceid and $$offset > ^0 ) 00p{ $$later = _17 } 01# else 00y( $$sentence == $$sentenceid ) 00G{ $$earlier = _17 ^fail ( RULE ) } 00X else ( 1 ) 00H { $$previous = _17 ^fail ( RULE ) } 004 } 
^reference O 0 1 B$$position = ^position ( start _0 ) $$location = %input << 16 $$sid = $$sentenceid << 8 $$location += $$sid + $$position ^respond ( ~grabprefix ) ^createfact ( ( $$location ^0 '_0 ) pronounreference 0 ) 
^referencepair O 0 1 B$$position = ^position ( start _0 ) $$location = %input << 16 $$sid = $$sentenceid << 8 $$location += $$sid + $$position ^respond ( ~grabprefix ) $$tmp = '_0 _0 = _1 ^respond ( ~grabprefix ) $$tmp = ^join ( $$tmp " and " '_0 ) ^createfact ( ( $$location ^0 $$tmp ) pronounreference 0 ) 
^usepronoun O 0 4 E$$chosen = null $$position = ^position ( start _1 ) ^^if 00F( ^0 and ^query ( direct_v ? ^0 ? ) ) 02P{ ^findreference ( $$position ) ^^if 00h( $$earlier ) 00w{ $$chosen = $$earlier } 01z else 00i( $$previous ) 00x{ $$chosen = $$previous } 00S else 00f( $$later ) 00u{ $$chosen = $$later } 004 } 004 ^^if 00U( ! $$chosen and ^1 and ^query ( direct_v ? ^1 ? ) ) 02P{ ^findreference ( $$position ) ^^if 00h( $$earlier ) 00w{ $$chosen = $$earlier } 01z else 00i( $$previous ) 00x{ $$chosen = $$previous } 00S else 00f( $$later ) 00u{ $$chosen = $$later } 004 } 004 ^^if 00g( $$chosen ) 02={ $$tmp = ^join ( AUTOSPACE '_0 $$chosen ^3 '_1 ^2 $$punctuation ) ^^if 00k( $pronounecho ) 01c{ ^log ( OUTPUT_ECHO RESOLVE: ---> $lastuserinput <--- ^1 into --> $$tmp \n ) } 004 ^input ( $$tmp ) ^fail ( SENTENCE ) } 004 
^solo O 0 0 A\[ callback=4000 \] 
^rose O 0 0 A$cs_control_pre = ~pre_control $cs_control_main = ~main_control $cs_control_post = ~xpostprocess $cs_token = 2097152 | 4194304 | 4096 | 255 | 256 | 512 | 1024 | 24576 | 2048 $stdtoken = $cs_token $cs_prepass = ~xfixsentence $avoidchat = 500 $lastno = 0 $cs_utcoffset = -8 $lastyes = 0 $cs_wildcardseparator = _ $cs_userfactlimit = 300 $youlastname = Flynn-Bell $$position = 1 $$location = 500000 << 16 $$sid = 1 << 8 $$location += $$sid + $$position $here = "San Francisco" 
^genericfind O 0 3 D@19 = null ^^if 00w( ^2 != what and ^2 != who ) 00v{ ^findclasses ( ^2 ) } 004 ^^if 00s( ^length ( @19 ) == 0 ) 00S{ @19 = ^query ( direct_sv ^1 correspond ? ) } 004 ^^loop ( -1 ) 0aW { $$x = ^last ( @19object ) ^^if 00N( ^query ( ismemberofset ^0 ^1 $$x 2 user ) ) 04A{ $$tmp = ^last ( @0fact ) $$flag = ^field ( $$tmp flag ) $$object = ^field ( $$tmp object ) ^^if 00r( $$flag & USER_FLAG1 ) 00b{ } 01/ else ( 1 ) 01U { $$tmp += 1 $$flag = ^field ( $$tmp flag ) ^^if 00r( $$flag & USER_FLAG1 ) 00K{ $$object = ^field ( $$tmp object ) } 004 } 004 ^pos ( pronoun $$object flip ) . ^end ( TOPIC ) } 05d else 00H( ^query ( direct_sv ^0 ^1 ? 2 user ) ) 04A{ $$tmp = ^last ( @0fact ) $$flag = ^field ( $$tmp flag ) $$object = ^field ( $$tmp object ) ^^if 00r( $$flag & USER_FLAG1 ) 00b{ } 01/ else ( 1 ) 01U { $$tmp += 1 $$flag = ^field ( $$tmp flag ) ^^if 00r( $$flag & USER_FLAG1 ) 00K{ $$object = ^field ( $$tmp object ) } 004 } 004 ^pos ( pronoun $$object flip ) . ^end ( TOPIC ) } 004 } 
^factquery O 0 5 F^^if 00m( $showfact == 1 ) 013{ ^log ( FILE "tmp/facts.txt" "^   ASK: ^0  \[ ^1  ^2 ^3 ^4 \] \n" ) } 004 ^^if 00m( $showfact == 2 ) 00&{ ^log ( OUTPUT_ECHO "^   ASK: ^0  \[ ^1  ^2 ^3 ^4 \] \n" ) } 004 ^^if 00x( ^3 == equal and ^1 == who ) 02Q{ ^^if 00R( ^2 == who and ^query ( direct_vo ? equal ^4 ) ) 00C{ @0subject . ^end ( TOPIC ) } 01o else 00R( ^4 == who and ^query ( direct_sv ^2 equal ? ) ) 00B{ @0object . ^end ( TOPIC ) } 004 } 004 ^^if 00v( ^1 == who or ^1 == what ) 05z{ ^^if 00v( ^2 == what or ^2 == who ) 01B{ ^^if 00A( ^query ( direct_vo ? ^3 ^4 ) ) 00Y{ ^pos ( pronoun @0subject flip ) . ^end ( TOPIC ) } 004 } 004 ^^if 00i( ^1 == what ) 033{ ^genericfind ( ^2 ^3 ^4 ) ^^if 00D( ^query ( direct_sv ^2 equal ? ) ) 00P{ ^2 = @0object ^genericfind ( ^2 ^3 ^4 ) } 01p else 00D( ^query ( direct_vo ? equal ^2 ) ) 00Q{ ^2 = @0subject ^genericfind ( ^2 ^3 ^4 ) } 004 } 004 } 004 
